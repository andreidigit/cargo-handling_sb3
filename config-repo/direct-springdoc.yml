springdoc:
  swagger-ui.path: /openapi/swagger-ui.html
  api-docs.path: /openapi/v3/api-docs
  packagesToScan: com.example.microservices.direct
  pathsToMatch: /**
  cache.disabled: true

  swagger-ui:
    oauth2-redirect-url: /swagger-ui/oauth2-redirect.html
    oauth:
      clientId: writer
      useBasicAuthenticationWithAccessCodeGrant: true
  oAuthFlow:
    authorizationUrl: https://localhost:8443/oauth2/authorize
    tokenUrl: https://localhost:8443/oauth2/token

api:
  common:
    version: 1.0.0
    title: Cargo Handling API
    description: Description of the API...
    termsOfService: MY TERMS OF SERVICE
    license: MY LICENSE
    licenseUrl: MY LICENSE URL

    externalDocDesc: MY WIKI PAGE
    externalDocUrl: MY WIKI URL
    contact:
      name: NAME OF CONTACT
      url: URL TO CONTACT
      email: contact@mail.com

  responseCodes:
    ok.description: OK
    badRequest.description: Bad Request, invalid format of the request. See response message for more information
    notFound.description: Not found, the specified id does not exist
    unprocessableEntity.description: Unprocessable entity, input parameters caused the processing to fail. See response message for more information

  store:

    get-store:
      description: Returns a model of the specified store id
      notes: |
        # Normal response
        If the requested store id is found the method will return information regarding:
        1. Base store information
        1. Service Addresses\n(technical information regarding the addresses of the microservices that created the response)

        # Expected error responses
        In the following cases, error response be created (used to simplify testing of error conditions)

        ## Non numerical store id
        400 - A **Bad Request** error will be returned

        ## Store id 13
        404 - A **Not Found** error will be returned

        ## Negative store ids
        422 - An **Unprocessable Entity** error will be returned

    create-store:
      description: Creates a store
      notes: |
        # Normal response
        Am entity of the store information posted to the API will be created.

        # Expected error responses
        1. If a store with the same storeId as specified in the posted information already exists,
           an **422 - Unprocessable Entity** error with a "duplicate key" error message will be returned

    update-store:
      description: Update the store
      notes: |
        # Normal response
        Am entity of the store information posted to the API will be updated.

        # Expected error responses
        1. If the store is not provide the changes based on the rules,
        an **422 - Unprocessable Entity** error with a "There is a broken Update Rule" error message will be returned

    delete-store:
      description: Deletes a store
      notes: |
        # Normal response
        Entities for store information will be deleted.

        # Expected error responses
        1. If the store contains cargo that not provide deleting based on the rules,
        an **422 - Unprocessable Entity** error with a "There is a broken Delete Rule" error message will be returned

  route:

    get-route:
      description: Returns a model of the specified route id
      notes: |
        # Normal response
        If the requested route id is found the method will return information regarding:
        1. Base route information
        1. Service Addresses\n(technical information regarding the addresses of the microservices that created the response)

        # Expected error responses
        In the following cases, error response be created (used to simplify testing of error conditions)

        ## Non numerical route id
        400 - A **Bad Request** error will be returned

        ## Route id 13
        404 - A **Not Found** error will be returned

        ## Negative route ids
        422 - An **Unprocessable Entity** error will be returned

    create-route:
      description: Creates a route
      notes: |
        # Normal response
        Am entity of the route information posted to the API will be created.

        # Expected error responses
        1. If a route with the same routeId as specified in the posted information already exists,
           an **422 - Unprocessable Entity** error with a "duplicate key" error message will be returned

    update-route:
      description: Update the route
      notes: |
        # Normal response
        Am entity of the route information posted to the API will be updated.

    delete-route:
      description: Deletes a route
      notes: |
        # Normal response
        Entities for route information will be deleted.

  cargo:

    get-cargo:
      description: Returns a model of the specified cargo id
      notes: |
        # Normal response
        If the requested cargo id is found the method will return information regarding:
        1. Base cargo information
        1. Service Addresses\n(technical information regarding the addresses of the microservices that created the response)

        # Expected error responses
        In the following cases, error response be created (used to simplify testing of error conditions)

        ## Non numerical cargo id
        400 - A **Bad Request** error will be returned

        ## Route id 13
        404 - A **Not Found** error will be returned

        ## Negative cargo ids
        422 - An **Unprocessable Entity** error will be returned

    create-cargo:
      description: Creates a cargo
      notes: |
        # Normal response
        Am entity of the cargo information posted to the API will be created.

        # Expected error responses
        1. If a cargo with the same cargoId as specified in the posted information already exists,
           an **422 - Unprocessable Entity** error with a "duplicate key" error message will be returned

    update-cargo:
      description: Update the cargo
      notes: |
        # Normal response
        Am entity of the cargo information posted to the API will be updated.

    delete-cargo:
      description: Deletes a cargo
      notes: |
        # Normal response
        Entities for cargo information will be deleted.

  order:

    get-order:
      description: Returns a model of the specified order id
      notes: |
        # Normal response
        If the requested order id is found the method will return information regarding:
        1. Base order information
        1. Service Addresses\n(technical information regarding the addresses of the microservices that created the response)

        # Expected error responses
        In the following cases, error response be created (used to simplify testing of error conditions)

        ## Non numerical order id
        400 - A **Bad Request** error will be returned

        ## Route id 13
        404 - A **Not Found** error will be returned

        ## Negative order ids
        422 - An **Unprocessable Entity** error will be returned

    create-order:
      description: Creates a order
      notes: |
        # Normal response
        Am entity of the order information posted to the API will be created.

        # Expected error responses
        1. If a order with the same orderId as specified in the posted information already exists,
           an **422 - Unprocessable Entity** error with a "duplicate key" error message will be returned

    update-order:
      description: Update the order
      notes: |
        # Normal response
        Am entity of the order information posted to the API will be updated.

    delete-order:
      description: Deletes a order
      notes: |
        # Normal response
        Entities for order information will be deleted.
