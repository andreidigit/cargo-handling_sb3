version: '3.7'

services:

  direct:
    build: microservices/direct-service
    container_name: compose
    deploy:
      resources:
        limits:
          memory: 512M
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      kafka:
        condition: service_started

  store:
    build: microservices/store-service
    deploy:
      resources:
        limits:
          memory: 512M
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgresql:5432/${STORE_DB_NAME}
    depends_on:
      postgresql:
        condition: service_healthy
      kafka:
        condition: service_started

  route:
    build: microservices/route-service
    deploy:
      resources:
        limits:
          memory: 512M
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgresql:5432/${ROUTE_DB_NAME}
    depends_on:
      postgresql:
        condition: service_healthy
      kafka:
        condition: service_started

  postgresql:
    image: postgres:11.22-alpine3.19
    deploy:
      resources:
        limits:
          memory: 512M
    restart: "unless-stopped"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: [ "CMD-SHELL", "PGPASSWORD=$POSTGRES_PASSWORD psql -U $POSTGRES_USER -h localhost -c 'SELECT 1;'" ]
      interval: 30s
      timeout: 10s
      retries: 5

  kafka:
    image: confluentinc/cp-kafka:7.6.1
    restart: "always"
    deploy:
      resources:
        limits:
          memory: 1024M
    ports:
      - "9092:9092"
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_BROKER_ID=1
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    depends_on:
      - zookeeper

  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.1
    restart: "always"
    deploy:
      resources:
        limits:
          memory: 512M
    ports:
      - "2181:2181"
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181

  redis:
    image: redis:7.2.4-alpine
    restart: "always"
    deploy:
      resources:
        limits:
          memory: 512M
    ports:
      - "6379:6379"
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
